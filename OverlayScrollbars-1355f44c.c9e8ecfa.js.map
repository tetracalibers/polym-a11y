{"version":3,"file":"OverlayScrollbars-1355f44c.c9e8ecfa.js","sources":["../node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","commonjsGlobal","undefined$1","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","_each","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","stop","max","parseFloat","start","pos","speacialEasing","startTime","frame","_stop","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","e","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","animate","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","_hostSizeChanged","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","takeRecords","option","changedOps","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","initBodyScroll","_bodyMouseTouchDownListener","activeElement","focus","valid","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","assign","ref","_jsx","_osInstance$getElemen","osClassNames"],"mappings":"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"}