{"version":3,"file":"es.number.to-fixed.963eadaa.js","sources":["../node_modules/core-js/internals/string-repeat.js","../node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $RangeError = RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw $RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\n    nativeToFixed(0.9, 0) !== '1' ||\n    nativeToFixed(1.255, 2) !== '1.25' ||\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"names":["toIntegerOrInfinity","require$$0","toString","require$$1","requireObjectCoercible","require$$2","$RangeError","stringRepeat","count","str","result","n","$","uncurryThis","thisNumberValue","require$$3","$repeat","require$$4","fails","require$$5","$String","floor","repeat","stringSlice","nativeToFixed","pow","x","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","FORCED","fractionDigits","number","fractDigits","sign","e","z","j","k"],"mappings":"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"}